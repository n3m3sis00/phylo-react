{"version":3,"sources":["resources/life.js","container/Store.js","components/TreeView.js","components/Sidebar.js","components/TabularView.js","components/Utils.js","components/Data.js","components/TreeToolbar.js","components/MSAView.js","container/Viewer.js","serviceWorker.js","index.js"],"names":["temptree","temptreeSeq","AppContext","React","createContext","AppProvider","state","isOpen","node","treeData","isOpenData","treeConfig","heigtoftree","drawBB","seq","showbranchlength","setShowBranchLength","todo","setState","setOpen","setOpenData","setNode","d","setTreeData","data","setTreeConfig","setTreeHeight","setSeq","setdrawBB","children","this","props","Provider","value","Component","TreeView","context","useContext","useState","treeResponse","setTreeResponse","useEffect","getConfig","showBranchLength","useStyles","makeStyles","theme","side_div","width","Sidebar","classes","Fragment","key","Drawer","anchor","open","onClose","className","name","replace","headCells","id","numeric","disablePadding","label","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","align","useToolbarStyles","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","func","selected","console","log","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","onClick","Alert","severity","paper","marginBottom","table","minWidth","TabularView","setSelected","dense","setDense","rows","x","idx","createData","Paper","length","TableContainer","Table","aria-labelledby","size","event","target","newSelecteds","n","TableBody","row","index","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","slice","handleClick","role","aria-checked","tabIndex","scope","FormControlLabel","control","Switch","makeTextFileLineIterator","fileURL","a","utf8Decoder","TextDecoder","fetch","response","reader","body","getReader","read","chunk","readerDone","done","decode","re","startIndex","result","exec","remainder","substr","lastIndex","substring","height","paste_data_div","inputup","display","connectbar","alignItems","input","marginLeft","iconButton","divider","margin","textbox","a11yProps","run","files","line","push","Data","setValue","api","setapi","setFiles","ufiles","setuFiles","ufilesNames","setuFilesNames","tempfasta","settempfasta","temptreeData","settemptreeData","getFiles","files_","i","getTree","handleUpload","e","filenames","readUploaded","FileReader","onload","readAsText","tempFastaFn","Tabs","newValue","indicatorColor","textColor","centered","Tab","hidden","TextField","multiline","cols","fullWidth","Button","InputBase","Divider","orientation","accept","multiple","htmlFor","showcase","TreeToolbar","AppBar","position","MSAView","heightoftree","treeheight","dataToShow","leafloc","bgColor","therme","tree_div","flexDirection","border","borderRadius","boxShadow","ViewerScreen","Grid","container","item","Box","style","overflowX","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7e5e66a8.chunk.js","sourcesContent":["export const treeData =\n  '(((((((((((((((((((Escherichia_coli_EDL933:0.00000,Escherichia_coli_O157_H7:0.00000)Escherichia_subclade:0.00044[96],((Escherichia_coli_O6:0.00000,Escherichia_coli_K12:0.00022)Escherichia_subclade:0.00022[76],(Shigella_flexneri_2a_2457T:0.00000,Shigella_flexneri_2a_301:0.00000)Shigella:0.00266[100])Enterobacteriaceae_subclade:0.00000[75])Enterobacteriaceae_subclade:0.00813[100],((Salmonella_enterica:0.00000,Salmonella_typhi:0.00000)Salmonella_subclade:0.00146[100],Salmonella_typhimurium:0.00075)Salmonella:0.00702[100])Enterobacteriaceae_subclade:0.03131[100],((Yersinia_pestis_Medievalis:0.00000,(Yersinia_pestis_KIM:0.00000,Yersinia_pestis_CO92:0.00000)Yersinia_subclade:0.00000[31])Yersinia:0.03398[100],Photorhabdus_luminescens:0.05076)Enterobacteriaceae_subclade:0.01182[61])Enterobacteriaceae_subclade:0.02183[98],((Blochmannia_floridanus:0.32481,Wigglesworthia_brevipalpis:0.35452)Enterobacteriaceae_subclade:0.08332[100],(Buchnera_aphidicola_Bp:0.27492,(Buchnera_aphidicola_APS:0.09535,Buchnera_aphidicola_Sg:0.10235)Buchnera_subclade:0.10140[100])Buchnera:0.06497[100])Enterobacteriaceae_subclade:0.15030[100])Enterobacteriaceae:0.02808[100],((Pasteurella_multocida:0.03441,Haemophilus_influenzae:0.03754)Pasteurellaceae_subclade:0.01571[94],Haemophilus_ducreyi:0.05333)Pasteurellaceae:0.07365[100])Gammaproteobacteria_subclade:0.03759[100],((((Vibrio_vulnificus_YJ016:0.00021,Vibrio_vulnificus_CMCP6:0.00291)Vibrio_subclade:0.01212[100],Vibrio_parahaemolyticus:0.01985)Vibrio_subclade:0.01536[100],Vibrio_cholerae:0.02995)Vibrio:0.02661[100],Photobacterium_profundum:0.06131)Vibrionaceae:0.05597[100])Gammaproteobacteria_subclade:0.03492[81],Shewanella_oneidensis:0.10577)Gammaproteobacteria_subclade:0.12234[100],((Pseudomonas_putida:0.02741,Pseudomonas_syringae:0.03162)Pseudomonas_subclade:0.02904[100],Pseudomonas_aeruginosa:0.03202)Pseudomonas:0.14456[100])Gammaproteobacteria_subclade:0.04492[98],((Xylella_fastidiosa_700964:0.01324,Xylella_fastidiosa_9a5c:0.00802)Xylella:0.10192[100],(Xanthomonas_axonopodis:0.01069,Xanthomonas_campestris:0.00934)Xanthomonas:0.05037[100])Xanthomonadaceae:0.24151[100])Gammaproteobacteria_subclade:0.02475[49],Coxiella_burnetii:0.33185)Gammaproteobacteria:0.03328[54],((((Neisseria_meningitidis_A:0.00400,Neisseria_meningitidis_B:0.00134)Neisseria:0.12615[100],Chromobacterium_violaceum:0.09623)Neisseriaceae:0.07131[100],((Bordetella_pertussis:0.00127,(Bordetella_parapertussis:0.00199,Bordetella_bronchiseptica:0.00022)Bordetella_subclade:0.00006[67])Bordetella:0.14218[100],Ralstonia_solanacearum:0.11464)Burkholderiales:0.08478[100])Betaproteobacteria_subclade:0.03840[75],Nitrosomonas_europaea:0.22059)Betaproteobacteria:0.08761[100])Proteobacteria_subclade:0.16913[100],((((((Agrobacterium_tumefaciens_Cereon:0.00000,Agrobacterium_tumefaciens_WashU:0.00000):0.05735[100],Rhizobium_meliloti:0.05114)Sinorhizobium:0.05575[100],((Brucella_suis:0.00102,Brucella_melitensis:0.00184)Brucella:0.08660[100],Rhizobium_loti:0.09308)Rhizobiales_subclade:0.02384[51])Rhizobiales_subclade:0.08637[100],(Rhodopseudomonas_palustris:0.04182,Bradyrhizobium_japonicum:0.06346)Bradyrhizobiaceae:0.14122[100])Rhizobiales:0.05767[100],Caulobacter_crescentus:0.23943)Alphaproteobacteria_subclade:0.11257[100],(Wolbachia_sp._wMel:0.51596,(Rickettsia_prowazekii:0.04245,Rickettsia_conorii:0.02487)Rickettsia:0.38019[100])Rickettsiaceae:0.12058[100])Alphaproteobacteria:0.12365[100])Proteobacteria_subclade:0.06301[100],((((Helicobacter_pylori_J99:0.00897,Helicobacter_pylori_26695:0.00637)Helicobacter_subclade:0.19055[100],Helicobacter_hepaticus:0.12643)Helicobacter:0.05330[100],Wolinella_succinogenes:0.11644)Helicobacteraceae:0.09105[100],Campylobacter_jejuni:0.20399)Campylobacterales:0.41390[100])Proteobacteria_subclade:0.04428[82],((Desulfovibrio_vulgaris:0.38320,(Geobacter_sulfurreducens:0.22491,Bdellovibrio_bacteriovorus:0.45934)Deltaproteobacteria_subclade:0.04870[43])Deltaproteobacteria:0.04100[69],(Acidobacterium_capsulatum:0.24572,Solibacter_usitatus:0.29086)Acidobacteria:0.20514[100])Bacteria_subclade:0.04214[64])Bacteria_subclade:0.05551[98],((Fusobacterium_nucleatum:0.45615,(Aquifex_aeolicus:0.40986,Thermotoga_maritima:0.34182)Bacteria_subclade:0.07696[100])Bacteria_subclade:0.03606[35],(((Thermus_thermophilus:0.26583,Deinococcus_radiodurans:0.29763)Deinococci:0.24776[100],Dehalococcoides_ethenogenes:0.53988)Bacteria_subclade:0.04370[35],((((Nostoc_sp._PCC_7120:0.12014,Synechocystis_sp._PCC6803:0.15652)Cyanobacteria_subclade:0.04331[98],Synechococcus_elongatus:0.13147)Cyanobacteria_subclade:0.05040[100],(((Synechococcus_sp._WH8102:0.06780,Prochlorococcus_marinus_MIT9313:0.05434)Cyanobacteria_subclade:0.04879[100],Prochlorococcus_marinus_SS120:0.10211)Cyanobacteria_subclade:0.04238[74],Prochlorococcus_marinus_CCMP1378:0.16170)Cyanobacteria_subclade:0.20442[100])Cyanobacteria_subclade:0.07646[100],Gloeobacter_violaceus:0.23764)Cyanobacteria:0.24501[100])Bacteria_subclade:0.04332[39])Bacteria_subclade:0.02720[51])Bacteria_subclade:0.03471[74],((((Gemmata_obscuriglobus:0.36751,Rhodopirellula_baltica:0.38017)Planctomycetaceae:0.24062[100],((Leptospira_interrogans_L1-130:0.00000,Leptospira_interrogans_56601:0.00027)Leptospira:0.47573[100],((Treponema_pallidum:0.25544,Treponema_denticola:0.16072)Treponema:0.19057[100],Borrelia_burgdorferi:0.42323)Spirochaetaceae:0.20278[100])Spirochaetales:0.07248[95])Bacteria_subclade:0.04615[42],(((Tropheryma_whipplei_TW08/27:0.00009,Tropheryma_whipplei_Twist:0.00081)Tropheryma:0.44723[100],Bifidobacterium_longum:0.29283)Actinobacteridae_subclade:0.14429[100],(((((Corynebacterium_glutamicum_13032:0.00022,Corynebacterium_glutamicum:0.00000)Corynebacterium_subclade:0.03415[100],Corynebacterium_efficiens:0.02559)Corynebacterium_subclade:0.03682[100],Corynebacterium_diphtheriae:0.06479)Corynebacterium:0.13907[100],(((Mycobacterium_bovis:0.00067,(Mycobacterium_tuberculosis_CDC1551:0.00000,Mycobacterium_tuberculosis_H37Rv:0.00000)Mycobacterium_subclade:0.00022[98])Mycobacterium_subclade:0.03027[100],Mycobacterium_leprae:0.05135)Mycobacterium_subclade:0.01514[97],Mycobacterium_paratuberculosis:0.02091)Mycobacterium:0.11523[100])Corynebacterineae:0.09883[100],(Streptomyces_avermitilis:0.02680,Streptomyces_coelicolor:0.02678)Streptomyces:0.16707[100])Actinomycetales_subclade:0.06110[91])Actinobacteridae:0.26800[100])Bacteria_subclade:0.03480[23],((Fibrobacter_succinogenes:0.51984,(Chlorobium_tepidum:0.37204,(Porphyromonas_gingivalis:0.11304,Bacteroides_thetaiotaomicron:0.13145)Bacteroidales:0.34694[100])Bacteroidetes/Chlorobi_group:0.09237[100])Bacteria_subclade:0.04841[62],(((Chlamydophila_pneumoniae_TW183:0.00000,(Chlamydia_pneumoniae_J138:0.00000,(Chlamydia_pneumoniae_CWL029:0.00000,Chlamydia_pneumoniae_AR39:0.00000)Chlamydophila_subclade:0.00000[37])Chlamydophila_subclade:0.00000[44])Chlamydophila_subclade:0.10482[100],Chlamydophila_caviae:0.05903)Chlamydophila:0.04170[98],(Chlamydia_muridarum:0.01938,Chlamydia_trachomatis:0.02643)Chlamydia:0.06809[100])Chlamydiaceae:0.60169[100])Bacteria_subclade:0.04443[32])Bacteria_subclade:0.04284[67])Bacteria_subclade:0.02646[66],((Thermoanaerobacter_tengcongensis:0.17512,((Clostridium_tetani:0.10918,Clostridium_perfringens:0.11535)Clostridium_subclade:0.03238[78],Clostridium_acetobutylicum:0.11396)Clostridium:0.15056[100])Clostridia:0.11788[100],(((((Mycoplasma_mobile:0.27702,Mycoplasma_pulmonis:0.28761)Mycoplasma_subclade:0.28466[100],((((Mycoplasma_pneumoniae:0.10966,Mycoplasma_genitalium:0.11268)Mycoplasma_subclade:0.31768[100],Mycoplasma_gallisepticum:0.24373)Mycoplasma_subclade:0.14180[100],Mycoplasma_penetrans:0.34890)Mycoplasma_subclade:0.06674[94],Ureaplasma_parvum:0.33874)Mycoplasmataceae_subclade:0.19177[100])Mycoplasmataceae_subclade:0.07341[100],Mycoplasma_mycoides:0.37680)Mycoplasmataceae:0.12541[100],Phytoplasma_Onion_yellows:0.47843)Mollicutes:0.09099[100],(((((Listeria_monocytogenes_F2365:0.00063,Listeria_monocytogenes_EGD:0.00144)Listeria_subclade:0.00235[90],Listeria_innocua:0.00248)Listeria:0.13517[100],((Oceanobacillus_iheyensis:0.13838,Bacillus_halodurans:0.09280)Bacillaceae_subclade:0.02676[91],(((Bacillus_cereus_ATCC_14579:0.00342,Bacillus_cereus_ATCC_10987:0.00123)Bacillus_subclade:0.00573[100],Bacillus_anthracis:0.00331)Bacillus_subclade:0.08924[100],Bacillus_subtilis:0.07876)Bacillus:0.01984[96])Bacillaceae:0.03907[100])Bacillales_subclade:0.02816[69],((Staphylococcus_aureus_MW2:0.00000,(Staphylococcus_aureus_N315:0.00022,Staphylococcus_aureus_Mu50:0.00022)Staphylococcus_subclade:0.00022[61])Staphylococcus_subclade:0.02479[100],Staphylococcus_epidermidis:0.03246)Staphylococcus:0.17366[100])Bacillales:0.02828[64],(((((((Streptococcus_agalactiae_III:0.00110,Streptococcus_agalactiae_V:0.00155)Streptococcus_subclade:0.01637[100],(Streptococcus_pyogenes_M1:0.00134,(Streptococcus_pyogenes_MGAS8232:0.00045,(Streptococcus_pyogenes_MGAS315:0.00000,Streptococcus_pyogenes_SSI-1:0.00022)Streptococcus_subclade:0.00110[100])Streptococcus_subclade:0.00066[87])Streptococcus_subclade:0.02250[100])Streptococcus_subclade:0.01360[100],Streptococcus_mutans:0.04319)Streptococcus_subclade:0.01920[99],(Streptococcus_pneumoniae_R6:0.00119,Streptococcus_pneumoniae_TIGR4:0.00124)Streptococcus_subclade:0.03607[100])Streptococcus:0.04983[100],Lactococcus_lactis:0.11214)Streptococcaceae:0.08901[100],Enterococcus_faecalis:0.07946)Lactobacillales_subclade:0.03958[100],(Lactobacillus_johnsonii:0.20999,Lactobacillus_plantarum:0.14371)Lactobacillus:0.06763[100])Lactobacillales:0.08989[100])Bacilli:0.08905[100])Firmicutes_subclade:0.09540[92])Firmicutes:0.04315[54])Bacteria:1.34959,(((((Thalassiosira_pseudonana:0.33483,(Cryptosporidium_hominis:0.25048,Plasmodium_falciparum:0.28267)Apicomplexa:0.14359[100])Eukaryota_subclade:0.03495[42],(((Oryza_sativa:0.07623,Arabidopsis_thaliana:0.09366)Streptophyta:0.15770[100],Cyanidioschyzon_merolae:0.38319)Eukaryota_subclade:0.08133[96],(Dictyostelium_discoideum:0.34685,(((Eremothecium_gossypii:0.07298,Saccharomyces_cerevisiae:0.07619)Saccharomycetaceae:0.21170[100],Schizosaccharomyces_pombe:0.24665)Ascomycota:0.15370[100],(((Anopheles_gambiae:0.10724,Drosophila_melanogaster:0.10233)Diptera:0.09870[100],((Takifugu_rubripes:0.03142,Danio_rerio:0.05230)Actinopterygii:0.04335[100],(((Rattus_norvegicus:0.03107,Mus_musculus:0.01651)Murinae:0.00398[91],(Homo_sapiens:0.00957,Pan_troglodytes:0.03864)Hominidae:0.01549[100])Euarchontoglires:0.01629[99],Gallus_gallus:0.04596)Gnathostomata_subclade:0.01859[100])Gnathostomata:0.09688[100])Metazoa_subclade:0.03693[95],(Caenorhabditis_elegans:0.01843,Caenorhabditis_briggsae:0.01896)Caenorhabditis:0.24324[100])Metazoa:0.09911[100])Eukaryota_subclade:0.04004[85])Eukaryota_subclade:0.02708[41])Eukaryota_subclade:0.02636[44])Eukaryota_subclade:0.06455[87],Leishmania_major:0.45664)Eukaryota_subclade:0.10129[100],Giardia_lamblia:0.55482)Eukaryota:0.57543[100],((Nanoarchaeum_equitans:0.81078,(((Sulfolobus_tokodaii:0.17389,Sulfolobus_solfataricus:0.18962)Sulfolobus:0.33720[100],Aeropyrum_pernix:0.43380)Thermoprotei_subclade:0.09462[94],Pyrobaculum_aerophilum:0.55514)Thermoprotei:0.12018[100])Archaea_subclade:0.15444[100],((Thermoplasma_volcanium:0.10412,Thermoplasma_acidophilum:0.09785)Thermoplasma:0.66151[100],((((Methanobacterium_thermautotrophicum:0.36583,Methanopyrus_kandleri:0.35331)Euryarchaeota_subclade:0.07446[99],(Methanococcus_maripaludis:0.28592,Methanococcus_jannaschii:0.13226)Methanococcales:0.23828[100])Euryarchaeota_subclade:0.06284[100],((Pyrococcus_horikoshii:0.02786,Pyrococcus_abyssi:0.02179)Pyrococcus_subclade:0.02239[100],Pyrococcus_furiosus:0.02366)Pyrococcus:0.36220[100])Euryarchaeota_subclade:0.04469[51],(Archaeoglobus_fulgidus:0.34660,(Halobacterium_sp._NRC-1:0.61597,(Methanosarcina_acetivorans:0.02602,Methanosarcina_mazei:0.03087)Methanosarcina:0.30588[100])Euryarchaeota_subclade:0.12801[100])Euryarchaeota_subclade:0.10395[100])Euryarchaeota_subclade:0.06815[62])Euryarchaeota:0.11833[99])Archaea:0.43325[100]):0.88776);'\n\nexport const smallTree = '(B:6.0,(A:5.0,C:3.0,E:4.0)Ancestor1:5.0,D:11.0);'\n\nexport const temptree =\n  '(((UniProt/Swiss-Prot|P26898|IL2RA_SHEEP:0.24036,(UniProt/Swiss-Prot|P41690|IL2RA_FELCA:0.17737,(UniProt/Swiss-Prot|P01589|IL2RA_HUMAN:0.03906,UniProt/Swiss-Prot|Q5MNY4|IL2RA_MACMU:0.03787):0.13033):0.04964):0.02189,UniProt/Swiss-Prot|P01590|IL2RA_MOUSE:0.23072):0.06814,(((UniProt/Swiss-Prot|Q95118|IL2RG_BOVIN:0.09600,UniProt/Swiss-Prot|P40321|IL2RG_CANFA:0.09845):0.25333,UniProt/Swiss-Prot|Q29416|IL2_CANFA:-0.35055):0.10231,(UniProt/Swiss-Prot|P26896|IL2RB_RAT:0.33631,UniProt/Swiss-Prot|Q7JFM4|IL2_AOTVO:-0.33631):0.10166):0.01607,(UniProt/Swiss-Prot|Q8BZM1|GLMN_MOUSE:0.32378,UniProt/Swiss-Prot|P36835|IL2_CAPHI:-0.32378):0.09999)'\n\nexport const temptreeSeq = `\n#CLUSTAL O(1.2.3) multiple sequence alignment\nUniProt/Swiss-Prot|P26898|IL2RA_SHEEP      MEPSLLMWRFFVFIVVPGCVTEACHDDPPSLRNA----------MFKVLRYE----VGTM\nUniProt/Swiss-Prot|P01590|IL2RA_MOUSE      MEPRLLMLGFLSLTIVPSCRAELCLYDPPEVPNA----------TFKALSYK----NGTI\nUniProt/Swiss-Prot|P41690|IL2RA_FELCA      MEPSLLLWGILTFVVVHGHVTELCDENPPDIQHA----------TFKALTYK----TGTM\nUniProt/Swiss-Prot|P01589|IL2RA_HUMAN      MDSYLLMWGLLTFIMVPGCQAELCDDDPPEIPHA----------TFKAMAYK----EGTM\nUniProt/Swiss-Prot|Q5MNY4|IL2RA_MACMU      MDPYLLMWGLLTFITVPGCQAELCDDDPPKITHA----------TFKAVAYK----EGTM\nUniProt/Swiss-Prot|Q95118|IL2RG_BOVIN      MLKPPLPLRSLLFLQLPLLGVGLNPKFLTPSGNEDIGGKPGTGGDFFLTSTPAGTLDVST\nUniProt/Swiss-Prot|P40321|IL2RG_CANFA      MLKPPLPLRSLLFLQLSLLGVGLNSTVPMPNGNEDIT------PDFFLTATPSETLSVSS\nUniProt/Swiss-Prot|P26896|IL2RB_RAT        MATVDLSWRLPLYILLLLLATT--------------------------------WVSAAV\nUniProt/Swiss-Prot|Q8BZM1|GLMN_MOUSE       ------------------------------------------------------------\nUniProt/Swiss-Prot|P36835|IL2_CAPHI        ------------------------------------------------------------\nUniProt/Swiss-Prot|Q7JFM4|IL2_AOTVO        ------------------------------------------------------------\nUniProt/Swiss-Prot|Q29416|IL2_CANFA        ------------------------------------------------------------\n`\n","import React, { Component } from 'react'\nimport { temptree, temptreeSeq } from '../resources/life.js'\n\nconst AppContext = React.createContext()\n\nclass AppProvider extends Component {\n  state = {\n    isOpen: false,\n    node: null,\n    treeData: temptree,\n    isOpenData: false,\n    treeConfig: null, //{treeheight : 240, leafloc : [{x : 10, y : 10, name: \"dummy\"}]}\n    heigtoftree: 0,\n    drawBB: false,\n    seq: temptreeSeq,\n    showbranchlength: true,\n  }\n  setShowBranchLength = todo =>{\n    this.setState({\n      showbranchlength : todo\n    })\n  }\n\n  setOpen = todo => {\n    this.setState({\n      isOpen: todo,\n    })\n  }\n\n  setOpenData = todo => {\n    this.setState({\n      isOpenData: todo,\n    })\n  }\n\n  setNode = d => {\n    this.setState({\n      node: d,\n    })\n  }\n\n  setTreeData = data => {\n    this.setState({\n      treeData: data,\n    })\n  }\n\n  setTreeConfig = data => {\n    this.setState({\n      treeConfig: data,\n    })\n  }\n  setTreeHeight = data => {\n    this.setState({\n      heigtoftree: data,\n    })\n  }\n\n  setSeq = data => {\n    this.setState({\n      seq: data,\n    })\n  }\n\n  setdrawBB = data => {\n    this.setState({\n      drawBB: data,\n    })\n  }\n\n  render() {\n    const { children } = this.props\n    const {\n      isOpen,\n      node,\n      treeData,\n      isOpenData,\n      treeConfig,\n      seq,\n      drawBB,\n      showbranchlength,\n    } = this.state\n    const {\n      setOpen,\n      setNode,\n      setTreeData,\n      setOpenData,\n      setTreeConfig,\n      setSeq,\n      setdrawBB,\n      setShowBranchLength,\n    } = this\n\n    return (\n      <AppContext.Provider\n        value={{\n          isOpen,\n          node,\n          treeData,\n          isOpenData,\n          treeConfig,\n          seq,\n          showbranchlength,\n          drawBB,\n          setOpen,\n          setNode,\n          setTreeData,\n          setOpenData,\n          setTreeConfig,\n          setSeq,\n          setdrawBB,\n          setShowBranchLength\n        }}\n      >\n        {children}\n      </AppContext.Provider>\n    )\n  }\n}\n\nexport default AppContext\n\nexport { AppProvider }\n","import React, { useContext, useState, useEffect } from 'react'\nimport {Tree} from 'phylo-react'\n\nimport AppContext from '../container/Store'\n\nexport default function TreeView(props) {\n  const context = useContext(AppContext)\n  const { treeData, setTreeConfig, showbranchlength } = context\n  const [treeResponse, setTreeResponse] = useState(null)\n  useEffect(() => {\n    setTreeConfig(treeResponse)\n  }, [treeResponse, setTreeConfig])\n  return (\n      <Tree data={treeData} getConfig = {treeResponse === null ? setTreeResponse : d => { }} showBranchLength={showbranchlength} /> //\n  )\n}\n","import React, { useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\n\nimport AppContext from '../container/Store'\n\nconst useStyles = makeStyles(theme => ({\n  side_div: {\n    width: 350,\n  },\n}))\n\nfunction Sidebar(props) {\n  const context = useContext(AppContext)\n  const { node, isOpen, setOpen } = context\n  const classes = useStyles()\n\n  return (\n    <React.Fragment key={'right'}>\n      <Drawer anchor={'right'} open={isOpen} onClose={() => setOpen(false)}>\n        <div className={classes.side_div}>\n          {node !== null ? <h4>{node.data.name.replace(/_/g, ' ')}</h4> : null}\n        </div>\n      </Drawer>\n    </React.Fragment>\n  )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AccountTreeIcon from '@material-ui/icons/AccountTree'\nimport Alert from '@material-ui/lab/Alert'\n\nfunction createData(idx, name) {\n  return { idx, name }\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Filename' },\n]\n\nfunction EnhancedTableHead(props) {\n  const { onSelectAllClick, numSelected, rowCount } = props\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all files' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n          >\n            {headCell.label}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  rowCount: PropTypes.number.isRequired,\n}\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { func, selected, numSelected } = props\n\n  console.log(selected)\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : null}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : null}\n      {numSelected > 0 ? (\n        <Tooltip title=\"View\">\n          {numSelected === 1 ? (\n            <IconButton aria-label=\"view\" onClick={() => func(selected[0])}>\n              <AccountTreeIcon />\n            </IconButton>\n          ) : (\n            <Alert severity=\"warning\">\n              Multiple Panes Rendering is not Implemeted Yet\n            </Alert>\n          )}\n        </Tooltip>\n      ) : null}\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n}))\n\nexport default function TabularView(props) {\n  const { data, func } = props\n  const classes = useStyles()\n  const [selected, setSelected] = React.useState([])\n  const [dense, setDense] = React.useState(false)\n  console.log('incominig', data)\n  const rows = data.map((x, idx) => createData(idx, x))\n  console.log('parsed', rows)\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name)\n      setSelected(newSelecteds)\n      return\n    }\n    setSelected([])\n  }\n\n  const handleClick = (event, idx) => {\n    const selectedIndex = selected.indexOf(idx)\n    let newSelected = []\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, idx)\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1))\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1))\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      )\n    }\n\n    setSelected(newSelected)\n  }\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked)\n  }\n\n  const isSelected = idx => selected.indexOf(idx) !== -1\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          selected={selected}\n          func={func}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              onSelectAllClick={handleSelectAllClick}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(row.idx)\n                const labelId = `enhanced-table-checkbox-${row.idx}`\n\n                return (\n                  <TableRow\n                    hover\n                    onClick={event => handleClick(event, row.idx)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.idx}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isItemSelected}\n                        inputProps={{\n                          'aria-labelledby': labelId,\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell\n                      component=\"th\"\n                      id={labelId}\n                      scope=\"row\"\n                      padding=\"none\"\n                    >\n                      {row.name}\n                    </TableCell>\n                  </TableRow>\n                )\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  )\n}\n","export async function* makeTextFileLineIterator(fileURL) {\n  const utf8Decoder = new TextDecoder('utf-8')\n  const response = await fetch(fileURL)\n  const reader = response.body.getReader()\n  let { value: chunk, done: readerDone } = await reader.read()\n  chunk = chunk ? utf8Decoder.decode(chunk) : ''\n\n  const re = /\\n|\\r|\\r\\n/gm\n  let startIndex = 0\n\n  for (;;) {\n    let result = re.exec(chunk)\n    if (!result) {\n      if (readerDone) {\n        break\n      }\n      let remainder = chunk.substr(startIndex)\n      ;({ value: chunk, done: readerDone } = await reader.read())\n      chunk = remainder + (chunk ? utf8Decoder.decode(chunk) : '')\n      startIndex = re.lastIndex = 0\n      continue\n    }\n    yield chunk.substring(startIndex, result.index)\n    startIndex = re.lastIndex\n  }\n  if (startIndex < chunk.length) {\n    // last line didn't end in a newline char\n    yield chunk.substr(startIndex)\n  }\n}\n","import React, { useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloudDoneIcon from '@material-ui/icons/CloudDone'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport AppContext from '../container/Store'\nimport TabularView from './TabularView'\nimport { makeTextFileLineIterator } from './Utils'\n\nconst useStyles = makeStyles(theme => ({\n  side_div: {\n    width: 'auto',\n    height: 350,\n    padding: 10,\n  },\n  paste_data_div: {\n    padding: 50,\n  },\n  inputup: {\n    display: 'none',\n  },\n  connectbar: {\n    display: 'flex',\n    alignItems: 'center',\n    width: 'auto',\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n  textbox: {\n    marginBottom: 10,\n  },\n}))\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nasync function run(fileURL) {\n  var files = []\n  for await (let line of makeTextFileLineIterator(fileURL)) {\n    files.push(line)\n  }\n  return files\n}\n\nfunction Data(props) {\n  const context = useContext(AppContext)\n  const { treeData, isOpenData, setOpenData, setTreeData, setSeq } = context\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n  const [api, setapi] = React.useState('http://localhost:8000')\n  const [files, setFiles] = React.useState(null)\n  const [ufiles, setuFiles] = React.useState(null)\n  const [ufilesNames, setuFilesNames] = React.useState(null)\n\n  const [tempfasta, settempfasta] = React.useState('')\n  const [temptreeData, settemptreeData] = React.useState(treeData)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  const getFiles = async () => {\n    var files_ = await run(api + '/files.txt')\n    var files = []\n    var i = 0\n    for (i; i < files_.length; i++) {\n      if (files_[i] !== '') {\n        files.push(files_[i])\n      }\n    }\n    setFiles(files)\n  }\n\n  const getTree = async idx => {\n    var data = await run(api + '/' + files[idx])\n    setTreeData(data[0])\n  }\n\n  const handleUpload = async e => {\n    if (e.target.files) {\n      var filenames = []\n      var i = 0\n      for (i; i < e.target.files.length; i++) {\n        filenames.push(e.target.files[i].name)\n      }\n      setuFilesNames(filenames)\n      setuFiles(e.target.files)\n    }\n  }\n\n  const readUploaded = async idx => {\n    var reader = new FileReader()\n    reader.onload = function () {\n      var text = reader.result\n      setTreeData(text)\n    }\n    reader.readAsText(ufiles[idx])\n  }\n\n  const tempFastaFn = async () => {\n    setSeq(tempfasta)\n    setTreeData(temptreeData)\n  }\n\n  return (\n    <React.Fragment key={'bottom'}>\n      <Drawer\n        anchor={'bottom'}\n        open={isOpenData}\n        onClose={() => setOpenData(false)}\n      >\n        <div className={classes.side_div}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Paste Data\" {...a11yProps(0)} />\n            <Tab label=\"Upload file\" {...a11yProps(1)} />\n            <Tab label=\"Connect Folder\" {...a11yProps(2)} />\n          </Tabs>\n          <div\n            role=\"tabpanel\"\n            hidden={value !== 0}\n            id={`simple-tabpanel-0`}\n            aria-labelledby={`simple-tab-0`}\n            className={classes.paste_data_div}\n          >\n            <TextField\n              id=\"outlined-multiline-static\"\n              label=\"Paste a newick format tree below\"\n              multiline\n              cols={20}\n              rows={8}\n              fullWidth\n              variant=\"outlined\"\n              value={temptreeData}\n              onChange={event => {\n                settemptreeData(event.target.value)\n              }}\n              className={classes.textbox}\n            />\n\n            <TextField\n              id=\"outlined-multiline-static\"\n              label=\"Paste a Sequence\"\n              multiline\n              cols={20}\n              rows={8}\n              fullWidth\n              variant=\"outlined\"\n              value={tempfasta}\n              onChange={event => {\n                settempfasta(event.target.value)\n              }}\n              className={classes.textbox}\n            />\n            <Button\n              variant=\"contained\"\n              fullWidth\n              color=\"primary\"\n              component=\"span\"\n              onClick={tempFastaFn}\n            >\n              Render\n            </Button>\n          </div>\n\n          <div\n            role=\"tabpanel\"\n            hidden={value !== 2}\n            id={`simple-tabpanel-2`}\n            aria-labelledby={`simple-tab-2`}\n            className={classes.paste_data_div}\n          >\n            <Paper component=\"form\" className={classes.connectbar}>\n              <InputBase\n                className={classes.input}\n                id=\"outlined-basic\"\n                label=\"API Addr\"\n                variant=\"outlined\"\n                value={api}\n                onChange={event => {\n                  setapi(event.target.value)\n                }}\n              />\n              <Divider className={classes.divider} orientation=\"vertical\" />\n              <IconButton\n                color=\"primary\"\n                className={classes.iconButton}\n                aria-label=\"directions\"\n                onClick={getFiles}\n              >\n                <CloudDoneIcon />\n              </IconButton>\n            </Paper>\n\n            <div>\n              {files ? <TabularView data={files} func={getTree} /> : null}\n            </div>\n          </div>\n\n          <div\n            role=\"tabpanel\"\n            hidden={value !== 1}\n            id={`simple-tabpanel-1`}\n            aria-labelledby={`simple-tab-1`}\n            className={classes.paste_data_div}\n          >\n            <input\n              accept=\"txt/*\"\n              className={classes.inputup}\n              id=\"contained-button-file\"\n              multiple\n              type=\"file\"\n              onChange={handleUpload}\n            />\n            <label htmlFor=\"contained-button-file\">\n              <Button\n                variant=\"contained\"\n                fullWidth\n                color=\"primary\"\n                component=\"span\"\n              >\n                Upload\n              </Button>\n            </label>\n            <div className={classes.showcase}>\n              {ufilesNames ? (\n                <TabularView data={ufilesNames} func={readUploaded} />\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </Drawer>\n    </React.Fragment>\n  )\n}\n\nexport default Data\n","import React, { useContext } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport StorageIcon from '@material-ui/icons/Storage'\nimport Switch from '@material-ui/core/Switch'\n\nimport AppContext from '../container/Store'\n\nexport default function TreeToolbar() {\n  const { setOpenData, setdrawBB, drawBB, setShowBranchLength, showbranchlength } = useContext(AppContext)\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar variant=\"dense\" color=\"inherit\">\n        <Button onClick={() => setOpenData(true)}>\n          <StorageIcon />\n        </Button>\n        Show Branch Length\n        <Switch\n          checked={showbranchlength}\n          onChange={() => setShowBranchLength(!showbranchlength)}\n          name=\"howbranchlength\"\n          inputProps={{ 'aria-label': 'secondary checkbox' }}\n        />\n        Show BG Color\n        <Switch\n          checked={drawBB}\n          onChange={() => setdrawBB(!drawBB)}\n          name=\"checkedA\"\n          inputProps={{ 'aria-label': 'secondary checkbox' }}\n        />\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import React, { useContext } from 'react'\nimport { MSAsvg } from 'phylo-react'\nimport AppContext from '../container/Store'\n\nexport default function MSAView(props) {\n  const context = useContext(AppContext)\n  const { treeConfig, seq, drawBB } = context\n  return treeConfig !== null ? <MSAsvg data={seq} heightoftree={treeConfig.treeheight} dataToShow={treeConfig.leafloc} bgColor={drawBB}/> : <div>Loading...</div>\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\n\nimport TreeView from '../components/TreeView'\nimport Sidebar from '../components/Sidebar'\nimport Data from '../components/Data'\nimport TreeToolbar from '../components/TreeToolbar'\nimport { AppProvider } from './Store'\nimport MSAView from '../components/MSAView'\n\nconst useStyles = makeStyles(therme => ({\n  tree_div: {\n    display: 'flex',\n    flexDirection: 'row',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    width: 'calc(100vw - 32px)',\n  },\n}))\n\nfunction ViewerScreen(props) {\n  const classes = useStyles()\n\n  return (\n    <AppProvider>\n      <Grid container spacing={2}>\n        <TreeToolbar />\n        <Grid key={1} item>\n          <div className={classes.tree_div}>\n            <Box width=\"20%\">\n              <TreeView />\n            </Box>\n            <Box width=\"80%\" style={{ overflowX: 'scroll' }}>\n              <MSAView />\n            </Box>\n          </div>\n        </Grid>\n      </Grid>\n      <Sidebar />\n      <Data />\n    </AppProvider>\n  )\n}\n\nexport default ViewerScreen\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport MainScreen from './container/Viewer'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<MainScreen />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}