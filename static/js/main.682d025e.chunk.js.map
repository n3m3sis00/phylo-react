{"version":3,"sources":["components/Utils.js","resources/life.js","container/Store.js","components/Tree.js","components/Sidebar.js","components/TabularView.js","components/Data.js","components/TreeToolbar.js","container/Viewer.js","serviceWorker.js","index.js"],"names":["makeTextFileLineIterator","fileURL","a","utf8Decoder","TextDecoder","fetch","response","reader","body","getReader","read","chunk","value","readerDone","done","decode","re","startIndex","result","exec","remainder","substr","lastIndex","substring","index","length","treeData","AppContext","React","createContext","AppProvider","state","isOpen","node","isOpenData","setOpen","todo","setState","setOpenData","setNode","d","setTreeData","data","children","this","props","Provider","Component","maxLength","d3","Tree","context","useContext","useEffect","e","r","s","split","t","n","c","branchset","push","pop","h","name","parseFloat","parseNewick","leafNodes","CountLeafNodes","tree","map","child","reduce","b","cluster","size","separation","root","sum","sort","setBrLength","y0","k","radius","forEach","remove","on","duration","linkExtension","transition","attr","checked","linkExtensionVariable","linkExtensionConstant","circle","style","link","linkVariable","linkConstant","svg","append","text","selectAll","links","join","filter","target","enter","each","linkExtensionNode","descendants","y","x","linkStep","source","sx","sy","tx","ty","mouseovered","active","classed","leaves","replace","id","type","useStyles","makeStyles","theme","side_div","width","Sidebar","classes","Fragment","key","Drawer","anchor","open","onClose","className","headCells","numeric","disablePadding","label","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","onChange","inputProps","headCell","align","useToolbarStyles","paddingLeft","spacing","paddingRight","highlight","palette","color","secondary","main","backgroundColor","lighten","light","primary","dark","title","flex","EnhancedTableToolbar","func","selected","console","log","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","onClick","Alert","severity","paper","marginBottom","table","minWidth","TabularView","useState","setSelected","dense","setDense","rows","idx","createData","Paper","TableContainer","Table","aria-labelledby","event","newSelecteds","TableBody","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","slice","handleClick","role","aria-checked","tabIndex","scope","FormControlLabel","control","Switch","height","paste_data_div","inputup","display","connectbar","alignItems","input","marginLeft","iconButton","divider","margin","a11yProps","run","files","line","Data","setValue","api","setapi","setFiles","ufiles","setuFiles","ufilesNames","setuFilesNames","getFiles","files_","i","getTree","handleUpload","filenames","readUploaded","FileReader","onload","readAsText","Tabs","newValue","indicatorColor","textColor","centered","Tab","hidden","TextField","multiline","cols","fullWidth","InputBase","Divider","orientation","accept","multiple","htmlFor","Button","showcase","TreeToolbar","AppBar","position","blue","therme","tree_div","border","borderRadius","boxShadow","ViewerScreen","Grid","container","item","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.682d025e.chunk.js","sourcesContent":["export function parseNewick(a) {\r\n  for (\r\n    var e = [], r = {}, s = a.split(/\\s*(;|\\(|\\)|,|:)\\s*/), t = 0;\r\n    t < s.length;\r\n    t++\r\n  ) {\r\n    var n = s[t]\r\n    switch (n) {\r\n      case '(':\r\n        var c = {}\r\n        r.branchset = [c]\r\n        e.push(r)\r\n        r = c\r\n        break\r\n      case ',':\r\n        c = {}\r\n        e[e.length - 1].branchset.push(c)\r\n        r = c\r\n        break\r\n      case ')':\r\n        r = e.pop()\r\n        break\r\n      case ':':\r\n        break\r\n      default:\r\n        var h = s[t - 1]\r\n        ')' === h || '(' === h || ',' === h\r\n          ? (r.name = n)\r\n          : ':' === h && (r.length = parseFloat(n))\r\n    }\r\n  }\r\n  return r\r\n}\r\n\r\nexport async function* makeTextFileLineIterator(fileURL) {\r\n  const utf8Decoder = new TextDecoder('utf-8')\r\n  const response = await fetch(fileURL)\r\n  const reader = response.body.getReader()\r\n  let { value: chunk, done: readerDone } = await reader.read()\r\n  chunk = chunk ? utf8Decoder.decode(chunk) : ''\r\n\r\n  const re = /\\n|\\r|\\r\\n/gm\r\n  let startIndex = 0\r\n\r\n  for (;;) {\r\n    let result = re.exec(chunk)\r\n    if (!result) {\r\n      if (readerDone) {\r\n        break\r\n      }\r\n      let remainder = chunk.substr(startIndex)\r\n      ;({ value: chunk, done: readerDone } = await reader.read())\r\n      chunk = remainder + (chunk ? utf8Decoder.decode(chunk) : '')\r\n      startIndex = re.lastIndex = 0\r\n      continue\r\n    }\r\n    yield chunk.substring(startIndex, result.index)\r\n    startIndex = re.lastIndex\r\n  }\r\n  if (startIndex < chunk.length) {\r\n    // last line didn't end in a newline char\r\n    yield chunk.substr(startIndex)\r\n  }\r\n}\r\n","export const treeData =\r\n  '(((((((((((((((((((Escherichia_coli_EDL933:0.00000,Escherichia_coli_O157_H7:0.00000)Escherichia_subclade:0.00044[96],((Escherichia_coli_O6:0.00000,Escherichia_coli_K12:0.00022)Escherichia_subclade:0.00022[76],(Shigella_flexneri_2a_2457T:0.00000,Shigella_flexneri_2a_301:0.00000)Shigella:0.00266[100])Enterobacteriaceae_subclade:0.00000[75])Enterobacteriaceae_subclade:0.00813[100],((Salmonella_enterica:0.00000,Salmonella_typhi:0.00000)Salmonella_subclade:0.00146[100],Salmonella_typhimurium:0.00075)Salmonella:0.00702[100])Enterobacteriaceae_subclade:0.03131[100],((Yersinia_pestis_Medievalis:0.00000,(Yersinia_pestis_KIM:0.00000,Yersinia_pestis_CO92:0.00000)Yersinia_subclade:0.00000[31])Yersinia:0.03398[100],Photorhabdus_luminescens:0.05076)Enterobacteriaceae_subclade:0.01182[61])Enterobacteriaceae_subclade:0.02183[98],((Blochmannia_floridanus:0.32481,Wigglesworthia_brevipalpis:0.35452)Enterobacteriaceae_subclade:0.08332[100],(Buchnera_aphidicola_Bp:0.27492,(Buchnera_aphidicola_APS:0.09535,Buchnera_aphidicola_Sg:0.10235)Buchnera_subclade:0.10140[100])Buchnera:0.06497[100])Enterobacteriaceae_subclade:0.15030[100])Enterobacteriaceae:0.02808[100],((Pasteurella_multocida:0.03441,Haemophilus_influenzae:0.03754)Pasteurellaceae_subclade:0.01571[94],Haemophilus_ducreyi:0.05333)Pasteurellaceae:0.07365[100])Gammaproteobacteria_subclade:0.03759[100],((((Vibrio_vulnificus_YJ016:0.00021,Vibrio_vulnificus_CMCP6:0.00291)Vibrio_subclade:0.01212[100],Vibrio_parahaemolyticus:0.01985)Vibrio_subclade:0.01536[100],Vibrio_cholerae:0.02995)Vibrio:0.02661[100],Photobacterium_profundum:0.06131)Vibrionaceae:0.05597[100])Gammaproteobacteria_subclade:0.03492[81],Shewanella_oneidensis:0.10577)Gammaproteobacteria_subclade:0.12234[100],((Pseudomonas_putida:0.02741,Pseudomonas_syringae:0.03162)Pseudomonas_subclade:0.02904[100],Pseudomonas_aeruginosa:0.03202)Pseudomonas:0.14456[100])Gammaproteobacteria_subclade:0.04492[98],((Xylella_fastidiosa_700964:0.01324,Xylella_fastidiosa_9a5c:0.00802)Xylella:0.10192[100],(Xanthomonas_axonopodis:0.01069,Xanthomonas_campestris:0.00934)Xanthomonas:0.05037[100])Xanthomonadaceae:0.24151[100])Gammaproteobacteria_subclade:0.02475[49],Coxiella_burnetii:0.33185)Gammaproteobacteria:0.03328[54],((((Neisseria_meningitidis_A:0.00400,Neisseria_meningitidis_B:0.00134)Neisseria:0.12615[100],Chromobacterium_violaceum:0.09623)Neisseriaceae:0.07131[100],((Bordetella_pertussis:0.00127,(Bordetella_parapertussis:0.00199,Bordetella_bronchiseptica:0.00022)Bordetella_subclade:0.00006[67])Bordetella:0.14218[100],Ralstonia_solanacearum:0.11464)Burkholderiales:0.08478[100])Betaproteobacteria_subclade:0.03840[75],Nitrosomonas_europaea:0.22059)Betaproteobacteria:0.08761[100])Proteobacteria_subclade:0.16913[100],((((((Agrobacterium_tumefaciens_Cereon:0.00000,Agrobacterium_tumefaciens_WashU:0.00000):0.05735[100],Rhizobium_meliloti:0.05114)Sinorhizobium:0.05575[100],((Brucella_suis:0.00102,Brucella_melitensis:0.00184)Brucella:0.08660[100],Rhizobium_loti:0.09308)Rhizobiales_subclade:0.02384[51])Rhizobiales_subclade:0.08637[100],(Rhodopseudomonas_palustris:0.04182,Bradyrhizobium_japonicum:0.06346)Bradyrhizobiaceae:0.14122[100])Rhizobiales:0.05767[100],Caulobacter_crescentus:0.23943)Alphaproteobacteria_subclade:0.11257[100],(Wolbachia_sp._wMel:0.51596,(Rickettsia_prowazekii:0.04245,Rickettsia_conorii:0.02487)Rickettsia:0.38019[100])Rickettsiaceae:0.12058[100])Alphaproteobacteria:0.12365[100])Proteobacteria_subclade:0.06301[100],((((Helicobacter_pylori_J99:0.00897,Helicobacter_pylori_26695:0.00637)Helicobacter_subclade:0.19055[100],Helicobacter_hepaticus:0.12643)Helicobacter:0.05330[100],Wolinella_succinogenes:0.11644)Helicobacteraceae:0.09105[100],Campylobacter_jejuni:0.20399)Campylobacterales:0.41390[100])Proteobacteria_subclade:0.04428[82],((Desulfovibrio_vulgaris:0.38320,(Geobacter_sulfurreducens:0.22491,Bdellovibrio_bacteriovorus:0.45934)Deltaproteobacteria_subclade:0.04870[43])Deltaproteobacteria:0.04100[69],(Acidobacterium_capsulatum:0.24572,Solibacter_usitatus:0.29086)Acidobacteria:0.20514[100])Bacteria_subclade:0.04214[64])Bacteria_subclade:0.05551[98],((Fusobacterium_nucleatum:0.45615,(Aquifex_aeolicus:0.40986,Thermotoga_maritima:0.34182)Bacteria_subclade:0.07696[100])Bacteria_subclade:0.03606[35],(((Thermus_thermophilus:0.26583,Deinococcus_radiodurans:0.29763)Deinococci:0.24776[100],Dehalococcoides_ethenogenes:0.53988)Bacteria_subclade:0.04370[35],((((Nostoc_sp._PCC_7120:0.12014,Synechocystis_sp._PCC6803:0.15652)Cyanobacteria_subclade:0.04331[98],Synechococcus_elongatus:0.13147)Cyanobacteria_subclade:0.05040[100],(((Synechococcus_sp._WH8102:0.06780,Prochlorococcus_marinus_MIT9313:0.05434)Cyanobacteria_subclade:0.04879[100],Prochlorococcus_marinus_SS120:0.10211)Cyanobacteria_subclade:0.04238[74],Prochlorococcus_marinus_CCMP1378:0.16170)Cyanobacteria_subclade:0.20442[100])Cyanobacteria_subclade:0.07646[100],Gloeobacter_violaceus:0.23764)Cyanobacteria:0.24501[100])Bacteria_subclade:0.04332[39])Bacteria_subclade:0.02720[51])Bacteria_subclade:0.03471[74],((((Gemmata_obscuriglobus:0.36751,Rhodopirellula_baltica:0.38017)Planctomycetaceae:0.24062[100],((Leptospira_interrogans_L1-130:0.00000,Leptospira_interrogans_56601:0.00027)Leptospira:0.47573[100],((Treponema_pallidum:0.25544,Treponema_denticola:0.16072)Treponema:0.19057[100],Borrelia_burgdorferi:0.42323)Spirochaetaceae:0.20278[100])Spirochaetales:0.07248[95])Bacteria_subclade:0.04615[42],(((Tropheryma_whipplei_TW08/27:0.00009,Tropheryma_whipplei_Twist:0.00081)Tropheryma:0.44723[100],Bifidobacterium_longum:0.29283)Actinobacteridae_subclade:0.14429[100],(((((Corynebacterium_glutamicum_13032:0.00022,Corynebacterium_glutamicum:0.00000)Corynebacterium_subclade:0.03415[100],Corynebacterium_efficiens:0.02559)Corynebacterium_subclade:0.03682[100],Corynebacterium_diphtheriae:0.06479)Corynebacterium:0.13907[100],(((Mycobacterium_bovis:0.00067,(Mycobacterium_tuberculosis_CDC1551:0.00000,Mycobacterium_tuberculosis_H37Rv:0.00000)Mycobacterium_subclade:0.00022[98])Mycobacterium_subclade:0.03027[100],Mycobacterium_leprae:0.05135)Mycobacterium_subclade:0.01514[97],Mycobacterium_paratuberculosis:0.02091)Mycobacterium:0.11523[100])Corynebacterineae:0.09883[100],(Streptomyces_avermitilis:0.02680,Streptomyces_coelicolor:0.02678)Streptomyces:0.16707[100])Actinomycetales_subclade:0.06110[91])Actinobacteridae:0.26800[100])Bacteria_subclade:0.03480[23],((Fibrobacter_succinogenes:0.51984,(Chlorobium_tepidum:0.37204,(Porphyromonas_gingivalis:0.11304,Bacteroides_thetaiotaomicron:0.13145)Bacteroidales:0.34694[100])Bacteroidetes/Chlorobi_group:0.09237[100])Bacteria_subclade:0.04841[62],(((Chlamydophila_pneumoniae_TW183:0.00000,(Chlamydia_pneumoniae_J138:0.00000,(Chlamydia_pneumoniae_CWL029:0.00000,Chlamydia_pneumoniae_AR39:0.00000)Chlamydophila_subclade:0.00000[37])Chlamydophila_subclade:0.00000[44])Chlamydophila_subclade:0.10482[100],Chlamydophila_caviae:0.05903)Chlamydophila:0.04170[98],(Chlamydia_muridarum:0.01938,Chlamydia_trachomatis:0.02643)Chlamydia:0.06809[100])Chlamydiaceae:0.60169[100])Bacteria_subclade:0.04443[32])Bacteria_subclade:0.04284[67])Bacteria_subclade:0.02646[66],((Thermoanaerobacter_tengcongensis:0.17512,((Clostridium_tetani:0.10918,Clostridium_perfringens:0.11535)Clostridium_subclade:0.03238[78],Clostridium_acetobutylicum:0.11396)Clostridium:0.15056[100])Clostridia:0.11788[100],(((((Mycoplasma_mobile:0.27702,Mycoplasma_pulmonis:0.28761)Mycoplasma_subclade:0.28466[100],((((Mycoplasma_pneumoniae:0.10966,Mycoplasma_genitalium:0.11268)Mycoplasma_subclade:0.31768[100],Mycoplasma_gallisepticum:0.24373)Mycoplasma_subclade:0.14180[100],Mycoplasma_penetrans:0.34890)Mycoplasma_subclade:0.06674[94],Ureaplasma_parvum:0.33874)Mycoplasmataceae_subclade:0.19177[100])Mycoplasmataceae_subclade:0.07341[100],Mycoplasma_mycoides:0.37680)Mycoplasmataceae:0.12541[100],Phytoplasma_Onion_yellows:0.47843)Mollicutes:0.09099[100],(((((Listeria_monocytogenes_F2365:0.00063,Listeria_monocytogenes_EGD:0.00144)Listeria_subclade:0.00235[90],Listeria_innocua:0.00248)Listeria:0.13517[100],((Oceanobacillus_iheyensis:0.13838,Bacillus_halodurans:0.09280)Bacillaceae_subclade:0.02676[91],(((Bacillus_cereus_ATCC_14579:0.00342,Bacillus_cereus_ATCC_10987:0.00123)Bacillus_subclade:0.00573[100],Bacillus_anthracis:0.00331)Bacillus_subclade:0.08924[100],Bacillus_subtilis:0.07876)Bacillus:0.01984[96])Bacillaceae:0.03907[100])Bacillales_subclade:0.02816[69],((Staphylococcus_aureus_MW2:0.00000,(Staphylococcus_aureus_N315:0.00022,Staphylococcus_aureus_Mu50:0.00022)Staphylococcus_subclade:0.00022[61])Staphylococcus_subclade:0.02479[100],Staphylococcus_epidermidis:0.03246)Staphylococcus:0.17366[100])Bacillales:0.02828[64],(((((((Streptococcus_agalactiae_III:0.00110,Streptococcus_agalactiae_V:0.00155)Streptococcus_subclade:0.01637[100],(Streptococcus_pyogenes_M1:0.00134,(Streptococcus_pyogenes_MGAS8232:0.00045,(Streptococcus_pyogenes_MGAS315:0.00000,Streptococcus_pyogenes_SSI-1:0.00022)Streptococcus_subclade:0.00110[100])Streptococcus_subclade:0.00066[87])Streptococcus_subclade:0.02250[100])Streptococcus_subclade:0.01360[100],Streptococcus_mutans:0.04319)Streptococcus_subclade:0.01920[99],(Streptococcus_pneumoniae_R6:0.00119,Streptococcus_pneumoniae_TIGR4:0.00124)Streptococcus_subclade:0.03607[100])Streptococcus:0.04983[100],Lactococcus_lactis:0.11214)Streptococcaceae:0.08901[100],Enterococcus_faecalis:0.07946)Lactobacillales_subclade:0.03958[100],(Lactobacillus_johnsonii:0.20999,Lactobacillus_plantarum:0.14371)Lactobacillus:0.06763[100])Lactobacillales:0.08989[100])Bacilli:0.08905[100])Firmicutes_subclade:0.09540[92])Firmicutes:0.04315[54])Bacteria:1.34959,(((((Thalassiosira_pseudonana:0.33483,(Cryptosporidium_hominis:0.25048,Plasmodium_falciparum:0.28267)Apicomplexa:0.14359[100])Eukaryota_subclade:0.03495[42],(((Oryza_sativa:0.07623,Arabidopsis_thaliana:0.09366)Streptophyta:0.15770[100],Cyanidioschyzon_merolae:0.38319)Eukaryota_subclade:0.08133[96],(Dictyostelium_discoideum:0.34685,(((Eremothecium_gossypii:0.07298,Saccharomyces_cerevisiae:0.07619)Saccharomycetaceae:0.21170[100],Schizosaccharomyces_pombe:0.24665)Ascomycota:0.15370[100],(((Anopheles_gambiae:0.10724,Drosophila_melanogaster:0.10233)Diptera:0.09870[100],((Takifugu_rubripes:0.03142,Danio_rerio:0.05230)Actinopterygii:0.04335[100],(((Rattus_norvegicus:0.03107,Mus_musculus:0.01651)Murinae:0.00398[91],(Homo_sapiens:0.00957,Pan_troglodytes:0.03864)Hominidae:0.01549[100])Euarchontoglires:0.01629[99],Gallus_gallus:0.04596)Gnathostomata_subclade:0.01859[100])Gnathostomata:0.09688[100])Metazoa_subclade:0.03693[95],(Caenorhabditis_elegans:0.01843,Caenorhabditis_briggsae:0.01896)Caenorhabditis:0.24324[100])Metazoa:0.09911[100])Eukaryota_subclade:0.04004[85])Eukaryota_subclade:0.02708[41])Eukaryota_subclade:0.02636[44])Eukaryota_subclade:0.06455[87],Leishmania_major:0.45664)Eukaryota_subclade:0.10129[100],Giardia_lamblia:0.55482)Eukaryota:0.57543[100],((Nanoarchaeum_equitans:0.81078,(((Sulfolobus_tokodaii:0.17389,Sulfolobus_solfataricus:0.18962)Sulfolobus:0.33720[100],Aeropyrum_pernix:0.43380)Thermoprotei_subclade:0.09462[94],Pyrobaculum_aerophilum:0.55514)Thermoprotei:0.12018[100])Archaea_subclade:0.15444[100],((Thermoplasma_volcanium:0.10412,Thermoplasma_acidophilum:0.09785)Thermoplasma:0.66151[100],((((Methanobacterium_thermautotrophicum:0.36583,Methanopyrus_kandleri:0.35331)Euryarchaeota_subclade:0.07446[99],(Methanococcus_maripaludis:0.28592,Methanococcus_jannaschii:0.13226)Methanococcales:0.23828[100])Euryarchaeota_subclade:0.06284[100],((Pyrococcus_horikoshii:0.02786,Pyrococcus_abyssi:0.02179)Pyrococcus_subclade:0.02239[100],Pyrococcus_furiosus:0.02366)Pyrococcus:0.36220[100])Euryarchaeota_subclade:0.04469[51],(Archaeoglobus_fulgidus:0.34660,(Halobacterium_sp._NRC-1:0.61597,(Methanosarcina_acetivorans:0.02602,Methanosarcina_mazei:0.03087)Methanosarcina:0.30588[100])Euryarchaeota_subclade:0.12801[100])Euryarchaeota_subclade:0.10395[100])Euryarchaeota_subclade:0.06815[62])Euryarchaeota:0.11833[99])Archaea:0.43325[100]):0.88776);'\r\n\r\nexport const smallTree = '(B:6.0,(A:5.0,C:3.0,E:4.0)Ancestor1:5.0,D:11.0);'\r\n","import React, { Component } from 'react'\r\nimport { treeData } from '../resources/life.js'\r\n\r\nconst AppContext = React.createContext()\r\n\r\nclass AppProvider extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    node: null,\r\n    treeData: treeData,\r\n    isOpenData: false,\r\n  }\r\n  setOpen = todo => {\r\n    this.setState({\r\n      isOpen: todo,\r\n    })\r\n  }\r\n\r\n  setOpenData = todo => {\r\n    this.setState({\r\n      isOpenData: todo,\r\n    })\r\n  }\r\n\r\n  setNode = d => {\r\n    this.setState({\r\n      node: d,\r\n    })\r\n  }\r\n\r\n  setTreeData = data => {\r\n    this.setState({\r\n      treeData: data,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    const { isOpen, node, treeData, isOpenData } = this.state\r\n    const { setOpen, setNode, setTreeData, setOpenData } = this\r\n\r\n    return (\r\n      <AppContext.Provider\r\n        value={{\r\n          isOpen,\r\n          node,\r\n          treeData,\r\n          isOpenData,\r\n          setOpen,\r\n          setNode,\r\n          setTreeData,\r\n          setOpenData,\r\n        }}\r\n      >\r\n        {children}\r\n      </AppContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppContext\r\n\r\nexport { AppProvider }\r\n","import React, { useContext, useEffect } from 'react'\r\nimport * as d3 from 'd3'\r\nimport { parseNewick } from './Utils'\r\n\r\nimport AppContext from '../container/Store'\r\n\r\nexport function CountLeafNodes(tree) {\r\n  if (tree.branchset) {\r\n    return tree.branchset\r\n      .map(child => {\r\n        return CountLeafNodes(child)\r\n      })\r\n      .reduce((a, b) => a + b)\r\n  } else return 1\r\n}\r\n\r\nfunction maxLength(d) {\r\n  return d.data.length + (d.children ? d3.max(d.children, maxLength) : 0)\r\n}\r\n\r\nfunction setBrLength(d, y0, k) {\r\n  d.radius = (y0 += d.data.length) * k\r\n  if (d.children)\r\n    d.children.forEach(function (d) {\r\n      setBrLength(d, y0, k)\r\n    })\r\n}\r\n\r\nexport default function Tree(props) {\r\n  const context = useContext(AppContext)\r\n  const { treeData, setOpen, setNode } = context\r\n\r\n  useEffect(() => {\r\n    var data = parseNewick(treeData)\r\n    var leafNodes = CountLeafNodes(data)\r\n    var width = 500\r\n    const cluster = d3\r\n      .cluster()\r\n      .size([leafNodes * 20, width])\r\n      .separation((a, b) => 1)\r\n\r\n    const root = d3\r\n      .hierarchy(data, d => d.branchset)\r\n      .sum(d => (d.branchset ? 0 : 1))\r\n      .sort(\r\n        (a, b) =>\r\n          a.value - b.value || d3.ascending(a.data.length, b.data.length),\r\n      )\r\n\r\n    cluster(root)\r\n    setBrLength(root, (root.data.length = 0), width / maxLength(root))\r\n\r\n    d3.selectAll('#tree > *').remove()\r\n    d3.select('#show-length input').on('change', changed)\r\n\r\n    const svg = d3\r\n      .select('#tree')\r\n      .attr('viewBox', [-10, -10, 1000, leafNodes * 20 + 10])\r\n      .attr('font-family', 'sans-serif')\r\n      .attr('font-size', 10)\r\n\r\n    svg.append('style').text(`\r\n            .link--active {\r\n                stroke: #000 !important;\r\n                stroke-width: 1.5px;\r\n            }\r\n            .label--active {\r\n                font-weight: bold;\r\n            }\r\n            `)\r\n\r\n    var link = svg\r\n      .append('g')\r\n      .attr('fill', 'none')\r\n      .attr('stroke', '#000')\r\n      .selectAll('path')\r\n      .data(root.links())\r\n      .join('path')\r\n      .attr('d', linkConstant)\r\n\r\n    var linkExtension = svg\r\n      .append('g')\r\n      .attr('fill', 'none')\r\n      .attr('stroke', '#000')\r\n      .attr('stroke-opacity', '0.2')\r\n      .selectAll('path')\r\n      .data(\r\n        root.links().filter(function (d) {\r\n          return !d.target.children\r\n        }),\r\n      )\r\n      .enter()\r\n      .append('path')\r\n      .each(function (d) {\r\n        d.target.linkExtensionNode = this\r\n      })\r\n      .attr('d', linkExtensionConstant)\r\n\r\n    var circle = svg\r\n      .append('g')\r\n      .selectAll('circle')\r\n      .data(root.descendants())\r\n      .join('circle')\r\n      .attr('cx', d => d.y)\r\n      .attr('cy', d => d.x)\r\n      .attr('fill', d => (d.children ? '#555' : '#999'))\r\n      .attr('r', 3)\r\n\r\n    svg\r\n      .append('g')\r\n      .selectAll('text')\r\n      .data(root.leaves())\r\n      .join('text')\r\n      .attr('x', d => d.y + 5)\r\n      .attr('y', d => d.x + 4)\r\n      .text(d => d.data.name.replace(/_/g, ' '))\r\n      .on('mouseover', mouseovered(true))\r\n      .on('mouseout', mouseovered(false))\r\n      .on('click', d => {\r\n        setOpen(true)\r\n        setNode(d)\r\n      })\r\n\r\n    function linkVariable(d) {\r\n      // console.log(d)\r\n      return linkStep(d.source.x, d.source.radius, d.target.x, d.target.radius)\r\n    }\r\n\r\n    function linkConstant(d) {\r\n      return linkStep(d.source.x, d.source.y, d.target.x, d.target.y)\r\n    }\r\n    function linkExtensionVariable(d) {\r\n      return linkStep(d.target.x, d.target.radius, d.target.x, d.target.y)\r\n    }\r\n\r\n    function linkExtensionConstant(d) {\r\n      return linkStep(d.target.x, d.target.y, d.target.x, d.target.y)\r\n    }\r\n\r\n    function linkStep(sx, sy, tx, ty) {\r\n      return 'M' + sy + ' ' + sx + 'V' + tx + 'H' + ty\r\n    }\r\n\r\n    function mouseovered(active) {\r\n      return function (d) {\r\n        d3.select(this).classed('label--active', active)\r\n      }\r\n    }\r\n\r\n    function changed() {\r\n      var t = d3.transition().duration(750)\r\n      linkExtension\r\n        .transition(t)\r\n        .attr('d', this.checked ? linkExtensionVariable : linkExtensionConstant)\r\n      circle.transition(t).style('opacity', this.checked ? 0 : 1)\r\n      link.transition(t).attr('d', this.checked ? linkVariable : linkConstant)\r\n    }\r\n  }, [setNode, setOpen, treeData])\r\n\r\n  return (\r\n    <div>\r\n      <label id=\"show-length\">\r\n        <input type=\"checkbox\" /> Show branch length\r\n      </label>\r\n      <svg id=\"tree\"> </svg>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Drawer from '@material-ui/core/Drawer'\r\n\r\nimport AppContext from '../container/Store'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  side_div: {\r\n    width: 350,\r\n  },\r\n}))\r\n\r\nfunction Sidebar(props) {\r\n  const context = useContext(AppContext)\r\n  const { node, isOpen, setOpen } = context\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <React.Fragment key={'right'}>\r\n      <Drawer anchor={'right'} open={isOpen} onClose={() => setOpen(false)}>\r\n        <div className={classes.side_div}>\r\n          {node !== null ? <h4>{node.data.name.replace(/_/g, ' ')}</h4> : null}\r\n        </div>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport { lighten, makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nfunction createData(idx, name) {\r\n  return { idx, name }\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Filename' },\r\n]\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, numSelected, rowCount } = props\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all files' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n          >\r\n            {headCell.label}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n}\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}))\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles()\r\n  const { func, selected, numSelected } = props\r\n\r\n  console.log(selected)\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : null}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : null}\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"View\">\r\n          {numSelected === 1 ? (\r\n            <IconButton aria-label=\"view\" onClick={() => func(selected[0])}>\r\n              <AccountTreeIcon />\r\n            </IconButton>\r\n          ) : (\r\n            <Alert severity=\"warning\">\r\n              Multiple Panes Rendering is not Implemeted Yet\r\n            </Alert>\r\n          )}\r\n        </Tooltip>\r\n      ) : null}\r\n    </Toolbar>\r\n  )\r\n}\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}))\r\n\r\nexport default function TabularView(props) {\r\n  const { data, func } = props\r\n  const classes = useStyles()\r\n  const [selected, setSelected] = React.useState([])\r\n  const [dense, setDense] = React.useState(false)\r\n  console.log('incominig', data)\r\n  const rows = data.map((x, idx) => createData(idx, x))\r\n  console.log('parsed', rows)\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name)\r\n      setSelected(newSelecteds)\r\n      return\r\n    }\r\n    setSelected([])\r\n  }\r\n\r\n  const handleClick = (event, idx) => {\r\n    const selectedIndex = selected.indexOf(idx)\r\n    let newSelected = []\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, idx)\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1))\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      )\r\n    }\r\n\r\n    setSelected(newSelected)\r\n  }\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked)\r\n  }\r\n\r\n  const isSelected = idx => selected.indexOf(idx) !== -1\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          selected={selected}\r\n          func={func}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(row.idx)\r\n                const labelId = `enhanced-table-checkbox-${row.idx}`\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onClick={event => handleClick(event, row.idx)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.idx}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      padding=\"none\"\r\n                    >\r\n                      {row.name}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloudDoneIcon from '@material-ui/icons/CloudDone'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport AppContext from '../container/Store'\r\nimport TabularView from './TabularView'\r\nimport { makeTextFileLineIterator } from './Utils'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  side_div: {\r\n    width: 'auto',\r\n    height: 350,\r\n    padding: 10,\r\n  },\r\n  paste_data_div: {\r\n    padding: 50,\r\n  },\r\n  inputup: {\r\n    display: 'none',\r\n  },\r\n  connectbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 'auto',\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}))\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  }\r\n}\r\n\r\nasync function run(fileURL) {\r\n  var files = []\r\n  for await (let line of makeTextFileLineIterator(fileURL)) {\r\n    files.push(line)\r\n  }\r\n  return files\r\n}\r\n\r\nfunction Data(props) {\r\n  const context = useContext(AppContext)\r\n  const { treeData, isOpenData, setOpenData, setTreeData } = context\r\n  const classes = useStyles()\r\n  const [value, setValue] = React.useState(0)\r\n  const [api, setapi] = React.useState('http://localhost:8000')\r\n  const [files, setFiles] = React.useState(null)\r\n  const [ufiles, setuFiles] = React.useState(null)\r\n  const [ufilesNames, setuFilesNames] = React.useState(null)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  const getFiles = async () => {\r\n    var files_ = await run(api + '/files.txt')\r\n    var files = []\r\n    var i = 0\r\n    for (i; i < files_.length; i++) {\r\n      if (files_[i] !== '') {\r\n        files.push(files_[i])\r\n      }\r\n    }\r\n    setFiles(files)\r\n  }\r\n\r\n  const getTree = async idx => {\r\n    var data = await run(api + '/' + files[idx])\r\n    setTreeData(data[0])\r\n  }\r\n\r\n  const handleUpload = async e => {\r\n    if (e.target.files) {\r\n      var filenames = []\r\n      var i = 0\r\n      for (i; i < e.target.files.length; i++) {\r\n        filenames.push(e.target.files[i].name)\r\n      }\r\n      setuFilesNames(filenames)\r\n      setuFiles(e.target.files)\r\n    }\r\n  }\r\n\r\n  const readUploaded = async idx => {\r\n    var reader = new FileReader()\r\n    reader.onload = function () {\r\n      var text = reader.result\r\n      setTreeData(text)\r\n    }\r\n    reader.readAsText(ufiles[idx])\r\n  }\r\n\r\n  return (\r\n    <React.Fragment key={'bottom'}>\r\n      <Drawer\r\n        anchor={'bottom'}\r\n        open={isOpenData}\r\n        onClose={() => setOpenData(false)}\r\n      >\r\n        <div className={classes.side_div}>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Paste Data\" {...a11yProps(0)} />\r\n            <Tab label=\"Upload file\" {...a11yProps(1)} />\r\n            <Tab label=\"Connect Folder\" {...a11yProps(2)} />\r\n          </Tabs>\r\n          <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== 0}\r\n            id={`simple-tabpanel-0`}\r\n            aria-labelledby={`simple-tab-0`}\r\n            className={classes.paste_data_div}\r\n          >\r\n            <TextField\r\n              id=\"outlined-multiline-static\"\r\n              label=\"Paste a newick format tree below\"\r\n              multiline\r\n              cols={20}\r\n              rows={8}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={treeData}\r\n              onChange={event => {\r\n                setTreeData(event.target.value)\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== 2}\r\n            id={`simple-tabpanel-2`}\r\n            aria-labelledby={`simple-tab-2`}\r\n            className={classes.paste_data_div}\r\n          >\r\n            <Paper component=\"form\" className={classes.connectbar}>\r\n              <InputBase\r\n                className={classes.input}\r\n                id=\"outlined-basic\"\r\n                label=\"API Addr\"\r\n                variant=\"outlined\"\r\n                value={api}\r\n                onChange={event => {\r\n                  setapi(event.target.value)\r\n                }}\r\n              />\r\n              <Divider className={classes.divider} orientation=\"vertical\" />\r\n              <IconButton\r\n                color=\"primary\"\r\n                className={classes.iconButton}\r\n                aria-label=\"directions\"\r\n                onClick={getFiles}\r\n              >\r\n                <CloudDoneIcon />\r\n              </IconButton>\r\n            </Paper>\r\n\r\n            <div>\r\n              {files ? <TabularView data={files} func={getTree} /> : null}\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== 1}\r\n            id={`simple-tabpanel-1`}\r\n            aria-labelledby={`simple-tab-1`}\r\n            className={classes.paste_data_div}\r\n          >\r\n            <input\r\n              accept=\"txt/*\"\r\n              className={classes.inputup}\r\n              id=\"contained-button-file\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={handleUpload}\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n              <Button\r\n                variant=\"contained\"\r\n                fullWidth\r\n                color=\"primary\"\r\n                component=\"span\"\r\n              >\r\n                Upload\r\n              </Button>\r\n            </label>\r\n            <div className={classes.showcase}>\r\n              {ufilesNames ? (\r\n                <TabularView data={ufilesNames} func={readUploaded} />\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Data\r\n","import React, { useContext } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport { blue } from '@material-ui/core/colors'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport StorageIcon from '@material-ui/icons/Storage'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\n\r\nimport AppContext from '../container/Store'\r\n\r\nexport default function TreeToolbar() {\r\n  const { setOpen, setOpenData } = useContext(AppContext)\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar variant=\"dense\" color=\"inherit\">\r\n        <Button onClick={() => setOpenData(true)}>\r\n          <StorageIcon style={{ color: blue[50] }} />\r\n        </Button>\r\n        <Button onClick={() => setOpen(true)}>\r\n          <SettingsIcon style={{ color: blue[50] }} />\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport Tree from '../components/Tree'\r\nimport Sidebar from '../components/Sidebar'\r\nimport Data from '../components/Data'\r\nimport TreeToolbar from '../components/TreeToolbar'\r\nimport { AppProvider } from './Store'\r\n\r\nconst useStyles = makeStyles(therme => ({\r\n  tree_div: {\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\r\n    width: 'calc(100vw - 32px)',\r\n  },\r\n}))\r\n\r\nfunction ViewerScreen(props) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <AppProvider>\r\n      <Grid container spacing={2}>\r\n        <TreeToolbar />\r\n        <Grid key={1} item>\r\n          <div className={classes.tree_div}>\r\n            <Tree />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Sidebar />\r\n      <Data />\r\n    </AppProvider>\r\n  )\r\n}\r\n\r\nexport default ViewerScreen\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport MainScreen from './container/Viewer'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<MainScreen />, document.getElementById('root'))\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}